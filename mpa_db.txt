Context Note: Indicator Tracking System for HEPRR-MPA Program
Overview
Our indicator tracking system is designed to monitor complex performance indicators across multiple countries and regions (e.g., RWANDA, KENYA, ETHIOPIA, BURUNDI, STP, IGAD, and ECSA-HC) as part of the HEPRR-MPA Program (2024–2030). The system tracks both country‐specific (CRF) and regional (RRF) indicators, which are further subdivided into Project Development Objectives (PDO) and Intermediate results. Each indicator is reported over multiple time periods (Baseline, Updated Baseline, Year 1, Year 2, …, End Target) and may be of various data types (numeric, percentage, yes/no, fractions, or mixed).

Database Schema
We use a single, highly flexible table—mpa_indicators—to store all indicator data. The key columns in this table are:

EntityID: Identifies the country or region (e.g., "RWANDA", "KENYA", "ETHIOPIA", "BURUNDI", "STP", "IGAD", "ECSA-HC").
PrimaryCategory: Distinguishes between country-specific (CRF) and regional-specific (RRF) indicators.
SecondaryCategory: Differentiates between PDO (Project Development Objective) and Intermediate indicators (e.g., "CRF PDO", "CRF Intermediate").
IID: A unique indicator identifier generated using MySQL’s UUID() function.
Indicator: A descriptive title for the indicator.
IndicatorDefinition/IndicatorQuestion/RemarksComments/SourceOfData: Optional text fields for further explanation, definitions, or notes.
ResponseType: Indicates the type of response expected. This can be 'Number' for numeric indicators, 'Percentage' for percentage values (which are stored as decimals with the "%" stripped), or 'Yes/No' for qualitative responses (stored as 1 for "Yes" and 0 for "No").
ReportingPeriod: A string representing the overall reporting period (e.g., "2023-2030").
ExpectedTarget: A display string for the target value (usually derived from the final reporting cell).
BaselinePAD2023, Baseline2024, TargetYearOne2024, TargetYearTwo2025, TargetYearThree2026, TargetYearFour2027, TargetYearFive2028, TargetYearSix2029, TargetYearSeven2030: These nine columns hold the standardized numeric values for each reporting period. The design maps 10 raw input cells (which include an "Achievements" column) into these 9 columns by omitting the "Achievements" value.
meta_target_format: An ENUM that specifies the original format of the value (e.g., 'number' or 'percentage').
meta_scoring_logic: Indicates how the indicator should be interpreted (e.g., 'greater_is_better', 'less_is_better', or 'exact_match').
meta_conversion_method: Documents any conversion performed at data entry (e.g., 'none' or 'strip_percentage').
meta_extra: A JSON field to hold any additional meta information.
created_at/updated_at: Timestamps for record creation and last update.
Data Standardization and Processing Logic
Uniform Data Entry:

All raw indicator values are converted at the point of entry. For example, percentage values (e.g., "80%") are stored as a decimal (80.00) after stripping the "%" symbol.
Qualitative Yes/No responses are standardized to 1 (Yes) or 0 (No).
Numeric values, including averages and counts, are stored as DECIMAL numbers.
This standardization eliminates the need for additional conversions during scoring or reporting.
Metadata for Downstream Processing:

meta_target_format: Records the original value type (number, percentage, etc.), so the system knows how to interpret the stored value.
meta_scoring_logic: Provides instructions on how to assess performance (for instance, whether higher numbers are better).
meta_conversion_method: Indicates if any conversion was applied (such as stripping a "%" sign), ensuring that downstream logic can trust the stored data.
meta_extra: Can store additional instructions if needed in future iterations.
Reporting Periods and Timeline:

The system supports multiple reporting time periods (Baseline 2023, Updated Baseline 2024, Year 1 2024, Year 2 2025, etc., up to End Target 2030).
Our design maps 10 raw cells into 9 columns by skipping the “Achievements” cell, ensuring consistency across all datasets.
Splitting Composite Indicators:

For indicators that combine values for different target groups (e.g., women and children), we split them into separate rows. This ensures clarity and allows for separate computation of achievements (as seen in our Rwanda Intermediate CRF dataset).
Use Case Examples
Rwanda PDO and Intermediate CRF Datasets:
We have multiple datasets for Rwanda, including PDO indicators (average scores and percentages) and Intermediate indicators (covering training, service delivery, immunization, etc.). Each dataset is inserted with careful mapping of values, ensuring that, for example, percentages are stored as decimals and average scores are stored as numbers.

Regional and Multi-Country Datasets (e.g., IGAD, ECSA-HC):
Similar logic applies to datasets from other entities. Our system uses the EntityID, PrimaryCategory, and SecondaryCategory fields to differentiate between these diverse sources while maintaining a consistent storage format.

Conclusion
Our indicator tracking system is built to be robust, flexible, and future-proof. By standardizing all data at the time of entry and enriching each record with meta-information, our system guarantees that all downstream computation—such as scoring, achievement tracking, and progress monitoring—can be performed without additional processing. The design supports multiple reporting periods and complex, heterogeneous data types while ensuring that the logic for computing achievements remains intact.

Any engineer working with this system should now have a complete understanding of the database schema, the purpose of each column, and the standardization logic that underpins our entire solution.